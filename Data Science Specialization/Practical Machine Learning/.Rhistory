}
if (file.exists("Source_Classification_Code.rds")) {
file.remove("DataForPeerAssessment.zip")
print("DataForPeerAssessment.zip deleted since rds files were successfully created.")
}
## This first line will likely take a few seconds. Be patient!
if(exists("NEI")) {
print("NEI exists")
} else {
NEI <- readRDS("summarySCC_PM25.rds")
}
if(exists("SCC")) {
print("SCC exists")
} else {
SCC <- readRDS("Source_Classification_Code.rds")
}
# Compare emissions from motor vehicle sources in Baltimore City with emissions from motor vehicle sources in Los Angeles County,
# California (???????????????? == ????????????????????). Which city has seen greater changes over time in motor vehicle emissions?
subset.NEI <- NEI[(NEI$fips=="24510"|NEI$fips=="06037") & NEI$type=="ON-ROAD",  ]
totalByYear <- aggregate(Emissions ~ year + fips, subset.NEI, sum)
totalByYear$fips[totalByYear$fips=="24510"] <- "Baltimore City"
totalByYear$fips[totalByYear$fips=="06037"] <- "Los Angeles"
png("plot6.png", width=1040, height=480)
plt <- ggplot(totalByYear, aes(factor(year), Emissions, fill='red'))
plt <- plt + facet_grid(. ~ fips)
plt <- plt + geom_bar(stat="identity", color = 'red')  +
xlab("year") +
ylab(expression('PM 2.5 emission')) +
theme(legend.position='none') +
ggtitle('Total Emissions from motor vehicle in Baltimore City vs Los Angeles   (1999 - 2008 by 3 year intervals)')
print(plt)
dev.off()
library(swirl)
swirl()
swirl()
rgp1()
rgp2()
head(swiss)
mdl <- lm(Fertility~Agriculture + Examination + Education + Catholic + Infant.Mortality,data = swiss)
vid(mdl)
vif(mdl)
mdl2 <- lm(Fertility ~ Agriculture + Education + Catholic + Infant.Mortality, data = swiss)
vif(mdl2)
1
x1c <- simbias()
1
appy(x1c,1,mean)
apply(x1c,1,mean)
1
fit1 <- lm(Fertility~Agriculture,swiss)
1
fit3 <- lm(Fertility ~ Agriculture + Examination + Education, swiss)
1
anova(fit1,fit3)
1
deviance(fit3)
1
d <- deviance(fit3)/43
1
n <- deviance(fit1)/2 - deviance(fit3)/2
n <- (deviance(fit1) - deviance(fit3))/2
1
n/d
1
pf(n/d, 2, 43, lower.tail=FALSE)
1
shapiro.test(fit3$residuals)
1
anova(fit1,fit3,fit5,fit6)
library(swirl)
swirl()
ravenData
1
mdl <- glm(ravenWinNum ~ ravenScore, binomial, ravenData)
1
lodds <- predict(mdl, data.frame(ravenScore=c(0, 3, 6)))
exp(lodds)/(1+exp(lodds))
1
summary(md1)
summary(mdl)
1
exp(confint(mdl))
1
anova(mdl)
1
qchisq(.95,1)
1
var(rpois(1000,50))
head(hits)
1
class(hits[,'date'])
1
as.integer(head(hits[,'date']))
1
mdl <- glm(visits ~ date, poisson, hits)
summary(mdl)
confint(mdl,'date')
exp(confint(mdl,'date'))
1
which.max(hits[,'visits'])
hits[704,]
1
lambda <- mdl$fitted.values[704]
1
qpois(.95,lambda)
1
mdl2 <- glm(formula = simplystats ~ date, family = poisson, data = hits, offset = log(visits + 1))
1
qpois(.95,mdl2$fittedvalues[704])
qpois(.95, mdl2$fitted.values[704])
formula(fit3$BestModel)[0]
par(mfrow=c(2, 2))
plot(fit1)
---
title: "Motor Trend Car Road Tests - Effects of automatic and manual transmission on MPG"
author: "Scott Zuehlke"
date: "December 21, 2016"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Abstract
Motor Trend, the auto magazine, has gathered data with the intent of comparing miles per gallon (MPG) for various vehicles, and especially comparing automatic and manual transmissions.
Using a combination of hypothesis testing and linear regression, we'll compare average MPG from automatic and manual transmission vehicles.  The results will show that manual transmission cars do get better gas mileage than automatic transmission cars.  In fact, they get approximately ___ additional miles per gallon.
### Data Loading and Processing
First, install necessary packages ggplot2 and bestglm, load the libraries into the session, load mtcars data set and check the structures.
```{r cars, message=FALSE, warning=FALSE,results='hide'}
#install.packages("ggplot2")
library(ggplot2)
#install.packages("bestglm")
library(bestglm)
data(mtcars)
str(mtcars)
```
See Appendix for output of str(mtcars).  Make sure all columns that _should_ be factors, are factors.
Number of Cylinders, V or Straight engine block, number of forward gears and number of carburetors should not be considered multiplicative, and so should be treated as factors.
```{r factors, echo=FALSE}
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$vs   <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
```
### Test the population mean MPG between automatic and manual transmissions
Create two different datasets, one for manual transmissions and one for automatic.  From the help section of mtcars, am==0 is automatic transmissions and am==1 is manual transmission.
```{r manualauto, echo=FALSE}
manualtrans <- subset(mtcars,am == 1)
autotrans <- subset(mtcars,am == 0)
```
Manual transmission cars averaged `r round(mean(manualtrans$mpg),2)` MPG, while automatic transmission cars averaged `r round(mean(autotrans$mpg),2)` MPG.
Based on this data, it looks like manual cars average more MPG than Automatic.  Test this hypothesis using a t test and store the information under object 'test'.  Use test $$H_{0}: \mu_{manual} = \mu_{automatic}$$ with alternative hypothesis $$H_{a}: \mu_{manual} \neq \mu_{automatic}$$
```{r ttestresult}
test <- t.test(manualtrans$mpg, autotrans$mpg)
```
The p-value for this test is `r round(test$p.value,3)`.
The 95% confidence interval is (`r round(test$conf.int[1],2)`,`r round(test$conf.int[2],2)`).
Both of these indicate that there is, in fact, a difference in means between automatic and manual transmissions.  Not only that, the data suggests that manual transmissions have a higher fuel economy.
### Regression Analysis
To quantify the difference between automatic and manual transmissions, look at some regression models that predict MPG from the mtcars data set.  To start, fit a base model only using field AM to predict MPG.  Call it fit1.
```{r basemodel,results = 'hide'}
fit1 <- lm(mpg~am,data = mtcars)
```
This model has an R square of `r summary(fit1)$r.squared`.
Now that the baseline has been set, use library bestglm to automatically find the best model features to use to predict MPG.  To do so, move the 'MPG' column to the final column and rename the column as 'y'.
```{r automodel, results='hide'}
col_idx <- grep("mpg",names(mtcars))
new_cols <- c(2:length(mtcars),col_idx)
mtcars.Xmpg <- subset(mtcars, select = new_cols)
colnames(mtcars.Xmpg)[colnames(mtcars.Xmpg)=='mpg'] <- 'y'
mtcars.Xy <- mtcars.Xmpg
fit3 <- bestglm(mtcars.Xy, IC = 'AIC', method = 'exhaustive')
```
```{r automodelfeats}
formula(fit3$BestModel)
```
The model gives us features wt, qsec and am, name it our best fitting model, bestFit, and compare the three models with an ANOVA.
```{r bestfit}
bestFit <- lm(mpg ~ wt + qsec + am, data = mtcars)
```
Using the best fitting model (R square of `r summary(bestFit)$r.squared`), the difference between manual and automatic transmissions is `r round(bestFit$coefficients[4],2)`.
## Conclusion
In revisiting the problem at hand, we were posed with two questions.  Answers are provided in the bullet below each question.
1. Is an automatic or manual transmission better for MPG?
* With 95% confidence, there is a difference between automatic and  manual transmissions in fuel economy.
2. Quantify the MPG difference between automatic and manual transmissions
* The estimated mileage increase in switching from an automatic to a manual transmission is `r round(bestFit$coefficients[4],2)`.
# Appendix
Look at a box-and-whisker plot of automatic vs manual transmission vs MPG.
```{r boxplot}
g <- ggplot(data = mtcars, aes(x=factor(am),y=mpg)) +
geom_boxplot() +
xlab('Transmission (0 is Automatic, 1 is Manual)') +
ylab('MPG') +
ggtitle('MPG in Automatic vs Manual Transmissions') +
theme(plot.title = element_text(hjust = 0.5))
g
```
Output of structure output
```{r datastructures}
str(mtcars)
```
Model diagnostics
par(mfrow=c(2, 2))
plot(fit1)
---
title: "Motor Trend Car Road Tests - Effects of automatic and manual transmission on MPG"
author: "Scott Zuehlke"
date: "December 21, 2016"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Abstract
Motor Trend, the auto magazine, has gathered data with the intent of comparing miles per gallon (MPG) for various vehicles, and especially comparing automatic and manual transmissions.
Using a combination of hypothesis testing and linear regression, we'll compare average MPG from automatic and manual transmission vehicles.  The results will show that manual transmission cars do get better gas mileage than automatic transmission cars.  In fact, they get approximately ___ additional miles per gallon.
### Data Loading and Processing
First, install necessary packages ggplot2 and bestglm, load the libraries into the session, load mtcars data set and check the structures.
```{r cars, message=FALSE, warning=FALSE,results='hide'}
#install.packages("ggplot2")
library(ggplot2)
#install.packages("bestglm")
library(bestglm)
data(mtcars)
str(mtcars)
```
See Appendix for output of str(mtcars).  Make sure all columns that _should_ be factors, are factors.
Number of Cylinders, V or Straight engine block, number of forward gears and number of carburetors should not be considered multiplicative, and so should be treated as factors.
```{r factors, echo=FALSE}
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$vs   <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
```
### Test the population mean MPG between automatic and manual transmissions
Create two different datasets, one for manual transmissions and one for automatic.  From the help section of mtcars, am==0 is automatic transmissions and am==1 is manual transmission.
```{r manualauto, echo=FALSE}
manualtrans <- subset(mtcars,am == 1)
autotrans <- subset(mtcars,am == 0)
```
Manual transmission cars averaged `r round(mean(manualtrans$mpg),2)` MPG, while automatic transmission cars averaged `r round(mean(autotrans$mpg),2)` MPG.
Based on this data, it looks like manual cars average more MPG than Automatic.  Test this hypothesis using a t test and store the information under object 'test'.  Use test $$H_{0}: \mu_{manual} = \mu_{automatic}$$ with alternative hypothesis $$H_{a}: \mu_{manual} \neq \mu_{automatic}$$
```{r ttestresult}
test <- t.test(manualtrans$mpg, autotrans$mpg)
```
The p-value for this test is `r round(test$p.value,3)`.
The 95% confidence interval is (`r round(test$conf.int[1],2)`,`r round(test$conf.int[2],2)`).
Both of these indicate that there is, in fact, a difference in means between automatic and manual transmissions.  Not only that, the data suggests that manual transmissions have a higher fuel economy.
### Regression Analysis
To quantify the difference between automatic and manual transmissions, look at some regression models that predict MPG from the mtcars data set.  To start, fit a base model only using field AM to predict MPG.  Call it fit1.
```{r basemodel,results = 'hide'}
fit1 <- lm(mpg~am,data = mtcars)
```
This model has an R square of `r summary(fit1)$r.squared`.
Now that the baseline has been set, use library bestglm to automatically find the best model features to use to predict MPG.  To do so, move the 'MPG' column to the final column and rename the column as 'y'.
```{r automodel, results='hide'}
col_idx <- grep("mpg",names(mtcars))
new_cols <- c(2:length(mtcars),col_idx)
mtcars.Xmpg <- subset(mtcars, select = new_cols)
colnames(mtcars.Xmpg)[colnames(mtcars.Xmpg)=='mpg'] <- 'y'
mtcars.Xy <- mtcars.Xmpg
fit3 <- bestglm(mtcars.Xy, IC = 'AIC', method = 'exhaustive')
```
```{r automodelfeats}
formula(fit3$BestModel)
```
The model gives us features wt, qsec and am, name it our best fitting model, bestFit, and compare the three models with an ANOVA.
```{r bestfit}
bestFit <- lm(mpg ~ wt + qsec + am, data = mtcars)
```
Using the best fitting model (R square of `r summary(bestFit)$r.squared`), the difference between manual and automatic transmissions is `r round(bestFit$coefficients[4],2)`.
## Conclusion
In revisiting the problem at hand, we were posed with two questions.  Answers are provided in the bullet below each question.
1. Is an automatic or manual transmission better for MPG?
* With 95% confidence, there is a difference between automatic and  manual transmissions in fuel economy.
2. Quantify the MPG difference between automatic and manual transmissions
* The estimated mileage increase in switching from an automatic to a manual transmission is `r round(bestFit$coefficients[4],2)`.
# Appendix
Look at a box-and-whisker plot of automatic vs manual transmission vs MPG.
```{r boxplot}
g <- ggplot(data = mtcars, aes(x=factor(am),y=mpg)) +
geom_boxplot() +
xlab('Transmission (0 is Automatic, 1 is Manual)') +
ylab('MPG') +
ggtitle('MPG in Automatic vs Manual Transmissions') +
theme(plot.title = element_text(hjust = 0.5))
g
```
Output of structure output
```{r datastructures}
str(mtcars)
```
Model diagnostics
par(mfrow=c(2, 2))
plot(fit1)
---
title: "Motor Trend Car Road Tests - Effects of automatic and manual transmission on MPG"
author: "Scott Zuehlke"
date: "December 21, 2016"
output: pdf_document
---
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
# Abstract
Motor Trend, the auto magazine, has gathered data with the intent of comparing miles per gallon (MPG) for various vehicles, and especially comparing automatic and manual transmissions.
Using a combination of hypothesis testing and linear regression, we'll compare average MPG from automatic and manual transmission vehicles.  The results will show that manual transmission cars do get better gas mileage than automatic transmission cars.  In fact, they get approximately ___ additional miles per gallon.
### Data Loading and Processing
First, install necessary packages ggplot2 and bestglm, load the libraries into the session, load mtcars data set and check the structures.
```{r cars, message=FALSE, warning=FALSE,results='hide'}
#install.packages("ggplot2")
library(ggplot2)
#install.packages("bestglm")
library(bestglm)
data(mtcars)
str(mtcars)
```
See Appendix for output of str(mtcars).  Make sure all columns that _should_ be factors, are factors.
Number of Cylinders, V or Straight engine block, number of forward gears and number of carburetors should not be considered multiplicative, and so should be treated as factors.
```{r factors, echo=FALSE}
mtcars$cyl  <- factor(mtcars$cyl)
mtcars$vs   <- factor(mtcars$vs)
mtcars$gear <- factor(mtcars$gear)
mtcars$carb <- factor(mtcars$carb)
```
### Test the population mean MPG between automatic and manual transmissions
Create two different datasets, one for manual transmissions and one for automatic.  From the help section of mtcars, am==0 is automatic transmissions and am==1 is manual transmission.
```{r manualauto, echo=FALSE}
manualtrans <- subset(mtcars,am == 1)
autotrans <- subset(mtcars,am == 0)
```
Manual transmission cars averaged `r round(mean(manualtrans$mpg),2)` MPG, while automatic transmission cars averaged `r round(mean(autotrans$mpg),2)` MPG.
Based on this data, it looks like manual cars average more MPG than Automatic.  Test this hypothesis using a t test and store the information under object 'test'.  Use test $$H_{0}: \mu_{manual} = \mu_{automatic}$$ with alternative hypothesis $$H_{a}: \mu_{manual} \neq \mu_{automatic}$$
```{r ttestresult}
test <- t.test(manualtrans$mpg, autotrans$mpg)
```
The p-value for this test is `r round(test$p.value,3)`.
The 95% confidence interval is (`r round(test$conf.int[1],2)`,`r round(test$conf.int[2],2)`).
Both of these indicate that there is, in fact, a difference in means between automatic and manual transmissions.  Not only that, the data suggests that manual transmissions have a higher fuel economy.
### Regression Analysis
To quantify the difference between automatic and manual transmissions, look at some regression models that predict MPG from the mtcars data set.  To start, fit a base model only using field AM to predict MPG.  Call it fit1.
```{r basemodel,results = 'hide'}
fit1 <- lm(mpg~am,data = mtcars)
```
This model has an R square of `r summary(fit1)$r.squared`.
Now that the baseline has been set, use library bestglm to automatically find the best model features to use to predict MPG.  To do so, move the 'MPG' column to the final column and rename the column as 'y'.
```{r automodel, results='hide'}
col_idx <- grep("mpg",names(mtcars))
new_cols <- c(2:length(mtcars),col_idx)
mtcars.Xmpg <- subset(mtcars, select = new_cols)
colnames(mtcars.Xmpg)[colnames(mtcars.Xmpg)=='mpg'] <- 'y'
mtcars.Xy <- mtcars.Xmpg
fit3 <- bestglm(mtcars.Xy, IC = 'AIC', method = 'exhaustive')
```
```{r automodelfeats}
formula(fit3$BestModel)
```
The model gives us features wt, qsec and am, name it our best fitting model, bestFit, and compare the three models with an ANOVA.
```{r bestfit}
bestFit <- lm(mpg ~ wt + qsec + am, data = mtcars)
```
Using the best fitting model (R square of `r summary(bestFit)$r.squared`), the difference between manual and automatic transmissions is `r round(bestFit$coefficients[4],2)`.
## Conclusion
In revisiting the problem at hand, we were posed with two questions.  Answers are provided in the bullet below each question.
1. Is an automatic or manual transmission better for MPG?
* With 95% confidence, there is a difference between automatic and  manual transmissions in fuel economy.
2. Quantify the MPG difference between automatic and manual transmissions
* The estimated mileage increase in switching from an automatic to a manual transmission is `r round(bestFit$coefficients[4],2)`.
# Appendix
Look at a box-and-whisker plot of automatic vs manual transmission vs MPG.
```{r boxplot}
g <- ggplot(data = mtcars, aes(x=factor(am),y=mpg)) +
geom_boxplot() +
xlab('Transmission (0 is Automatic, 1 is Manual)') +
ylab('MPG') +
ggtitle('MPG in Automatic vs Manual Transmissions') +
theme(plot.title = element_text(hjust = 0.5))
g
```
Output of structure output
```{r datastructures}
str(mtcars)
```
Model diagnostics
```{r plot1diagnostics}
par(mfrow=c(2, 2))
plot(fit1)
```
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
library(caret)
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
adData = data.frame(diagnosis,predictors)
train = createDataPartition(diagnosis, p = 0.50,list=FALSE)
test = createDataPartition(diagnosis, p = 0.50,list=FALSE)
adData = data.frame(predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
adData = data.frame(diagnosis,predictors)
trainIndex = createDataPartition(diagnosis, p = 0.50)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
print("Hello World!")
training.data <- read.csv('pml-training.csv', na.strings=c("NA","#DIV/0!",""))
testing.data <- read.csv('pml-testing.csv',na.strings=c("NA","#DIV/0!",""))
# Drop columns that contain mostly NA
training.data <- training.data[,colSums(is.na(training.data)) == 0]
testing.data <- testing.data[,colSums(is.na(testing.data)) == 0]
# Data Cleanup
## Remove small variance metrics
NZVcols.trian <- nearZeroVar(training.data, saveMetrics=TRUE)
training.data.NZV <- training.data[,NZVcols.trian$nzv==FALSE]
NZVcols.test <- nearZeroVar(training.data, saveMetrics=TRUE)
testing.data.NZV <- testing.data[,NZVcols.test$nzv==FALSE]
## Split training.data.NZV into a usable train and test set.
inTrain <- createDataPartition(training.data.NZV$classe, p=0.75, list=FALSE)
train.data <- training.data.NZV[inTrain, ]
test.data <- training.data.NZV[-inTrain, ]
## Convert factor variables into indicators, drop user_name field
train.data$user_name <- NULL
test.data$user_name <- NULL
testing.data.NZV$user_name <- NULL
train.data$cvtd_timestamp <- NULL
test.data$cvtd_timestamp <- NULL
testing.data.NZV$cvtd_timestamp <- NULL
train.data$X <- NULL
test.data$X <- NULL
testing.data.NZV$X <- NULL
# Set cross validation details
control <- trainControl(method="repeatedcv", number=10, repeats=3, search="random",allowParallel = TRUE)
setwd("~/Desktop/Practical Machine Learning")
library(caret)
library(rpart)
library(rpart.plot)
library(randomForest)
library(ipred)
library(gbm)
training.data <- read.csv('pml-training.csv', na.strings=c("NA","#DIV/0!",""))
testing.data <- read.csv('pml-testing.csv',na.strings=c("NA","#DIV/0!",""))
# Drop columns that contain mostly NA
training.data <- training.data[,colSums(is.na(training.data)) == 0]
testing.data <- testing.data[,colSums(is.na(testing.data)) == 0]
# Data Cleanup
## Remove small variance metrics
NZVcols.trian <- nearZeroVar(training.data, saveMetrics=TRUE)
training.data.NZV <- training.data[,NZVcols.trian$nzv==FALSE]
NZVcols.test <- nearZeroVar(training.data, saveMetrics=TRUE)
testing.data.NZV <- testing.data[,NZVcols.test$nzv==FALSE]
## Split training.data.NZV into a usable train and test set.
inTrain <- createDataPartition(training.data.NZV$classe, p=0.75, list=FALSE)
train.data <- training.data.NZV[inTrain, ]
test.data <- training.data.NZV[-inTrain, ]
## Convert factor variables into indicators, drop user_name field
train.data$user_name <- NULL
test.data$user_name <- NULL
testing.data.NZV$user_name <- NULL
train.data$cvtd_timestamp <- NULL
test.data$cvtd_timestamp <- NULL
testing.data.NZV$cvtd_timestamp <- NULL
train.data$X <- NULL
test.data$X <- NULL
testing.data.NZV$X <- NULL
# Set cross validation details
control <- trainControl(method="repeatedcv", number=10, repeats=3, search="random",allowParallel = TRUE)
bdt.start <- proc.time()
dt.bag <- bagging(classe~., data=train.data)
bdt.run <- proc.time() - bdt.start
conf_bdt.train <- confusionMatrix(train.data$classe, predict(dt.bag, train.data))
conf_bdtree.test <- confusionMatrix(test.data$classe, predict(dt.bag, test.data))
conf_bdt.train
conf_bdt.test
conf_bdtree.test
conf_bdtree.test$overall[1]
bdt.run
bdt.run[2]
varImp(dt.bag)
final.test <- predict(dt.bag, testing.data.NZV)
final.test
valPreds <- data.frame(0)
valPreds$problem_id <- testing.data$problem_id
valPreds$prediction <- final.test
valPreds
valPreds <- data.frame(problem_id = testing.data$problem_id, prediction = final.test)
valPreds
write.csv(valPreds, "PML Quiz Predictions.csv",row.names = FALSE)
ValidationPredictionResults <- data.frame(  problem_id=testing.data.NZV$problem_id,  predicted=predict(dt.bag, testing.data.NZV))
library(rattle)
fancyRpartPlot(dt.bag)
fancyRpartPlot(model = dt.bag)
plot(dt.bag)
dt.bag
fancyRpartPlot(dt.bag$finalModel)
dt.bag
dt.bag$mtrees
fancyRpartPlot(dt.bag$mtrees)
fancyRpartPlot(dt.bag$mtrees[1])
valPreds <- data.frame(problem_id = testing.data$problem_id, predicted=predict(dt.bag, testing.data.NZV))
